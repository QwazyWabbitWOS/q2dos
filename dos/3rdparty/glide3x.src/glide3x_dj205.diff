diff -rupN glide3x-ORIG/h5/glide3/src/distrip.c glide3x/h5/glide3/src/distrip.c
--- glide3x-ORIG/h5/glide3/src/distrip.c	2003-09-02 02:33:28 +0000
+++ glide3x/h5/glide3/src/distrip.c	2015-07-28 03:43:28 +0000
@@ -458,7 +458,7 @@ GR_DIENTRY(grDrawVertexArray, void , (Fx
     else {
       while ((int)Count >= 3) {
         grDrawTriangle(*(float **)pointers, *((float **)pointers+1), *((float **)pointers+2));
-        (float *)pointers += 3;
+        pointers = (float *)pointers + 3;
         Count -= 3;
       }
     }
diff -rupN glide3x-ORIG/h5/glide3/src/gaa.c glide3x/h5/glide3/src/gaa.c
--- glide3x-ORIG/h5/glide3/src/gaa.c	2003-09-02 02:33:28 +0000
+++ glide3x/h5/glide3/src/gaa.c	2015-07-28 03:43:28 +0000
@@ -626,7 +626,7 @@ _grAADrawPoints(FxI32 mode, FxI32 count,
       e = pointers;
       if (mode)
         e = *(float **)e;
-      (float *)pointers += stride;
+      pointers = (float *)pointers + stride;
       
       ptX = FARRAY(e, gc->state.vData.vertexInfo.offset);
       ptY = FARRAY(e, gc->state.vData.vertexInfo.offset+4);
@@ -727,7 +727,7 @@ _grAADrawPoints(FxI32 mode, FxI32 count,
       if (mode)
         e = *(float **)e;
       oow = 1.0f / FARRAY(e, gc->state.vData.wInfo.offset);        
-      (float *)pointers += stride;
+      pointers = (float *)pointers + stride;
       
       ptX = FARRAY(e, gc->state.vData.vertexInfo.offset)
         *oow*gc->state.Viewport.hwidth+gc->state.Viewport.ox;
@@ -851,9 +851,9 @@ _grAADrawLineStrip(FxI32 mode, FxI32 lty
         v1 = *(float **)v1;
         v2 = *(float **)v2;
       }
-      (float *)pointers += stride;
+      pointers = (float *)pointers + stride;
       if (ltype == GR_LINES)
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
       
       /* draw from low Y to high Y */
       if (FARRAY(v2, gc->state.vData.vertexInfo.offset+4) < FARRAY(v1, gc->state.vData.vertexInfo.offset+4)) {
@@ -1032,9 +1032,9 @@ _grAADrawLineStrip(FxI32 mode, FxI32 lty
           v1 = *(float **)v1;
           v2 = *(float **)v2;
         }
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         if (ltype == GR_LINES)
-          (float *)pointers += stride;
+          pointers = (float *)pointers + stride;
         owa = oowa = 1.0f / FARRAY(v1, gc->state.vData.wInfo.offset);
         owb = oowb = 1.0f / FARRAY(v2, gc->state.vData.wInfo.offset);
       }
@@ -1046,7 +1046,7 @@ _grAADrawLineStrip(FxI32 mode, FxI32 lty
           v1 = *(float **)v1;
           v2 = *(float **)v2;
         }
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         owb = oowb = 1.0f / FARRAY(v2, gc->state.vData.wInfo.offset);
       }
       
@@ -1384,7 +1384,7 @@ _grAADrawTriangles(FxI32 mode, FxI32 tty
       b = *(float **)b;
       c = *(float **)c;
     }
-    (float *)pointers += stride*3;
+    pointers = (float *)pointers + stride*3;
 
     /* move culling test to here */
     {
@@ -1558,7 +1558,7 @@ _grAAVpDrawTriangles(FxI32 mode, FxI32 t
       b = *(float **)b;
       c = *(float **)c;
     }
-    (float *)pointers += stride*3;
+    pointers = (float *)pointers + stride*3;
     oowa = 1.0f / FARRAY(a, gc->state.vData.wInfo.offset);        
     oowb = 1.0f / FARRAY(b, gc->state.vData.wInfo.offset);        
     oowc = 1.0f / FARRAY(c, gc->state.vData.wInfo.offset);        
@@ -1723,7 +1723,7 @@ _grAADrawVertexList(FxU32 type, FxI32 mo
   if (type == kSetupFan) {
     v[0] = (mode == 0) ? pointers : *(float **)pointers;
     while (sCount--) {
-      (float *)pointers += stride;
+      pointers = (float *)pointers + stride;
       if (mode) {
         v[1] = *(float **)pointers;
         v[2] = *((float **)pointers+1);
@@ -1765,7 +1765,7 @@ _grAADrawVertexList(FxU32 type, FxI32 mo
         _grAADrawTriangles(1, type, 3, v);
       else
         _grAAVpDrawTriangles(1, type, 3, v);    
-      (float *)pointers += stride;
+      pointers = (float *)pointers + stride;
       flip = ~flip;
     }
     flip = ~flip;
diff -rupN glide3x-ORIG/h5/glide3/src/gdraw.c glide3x/h5/glide3/src/gdraw.c
--- glide3x-ORIG/h5/glide3/src/gdraw.c	2003-09-02 02:33:28 +0000
+++ glide3x/h5/glide3/src/gdraw.c	2015-07-28 03:43:28 +0000
@@ -479,7 +479,7 @@ _grDrawPoints(FxI32 mode, FxI32 count, v
         vPtr = pointers;
         if (mode) vPtr = *(float **)vPtr;
         
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         
         GDBG_INFO_MORE(gc->myLevel, "(%f %f)\n",  
                        FARRAY(vPtr,gc->state.vData.vertexInfo.offset), 
@@ -562,7 +562,7 @@ _grDrawPoints(FxI32 mode, FxI32 count, v
         vPtr = pointers;
         if (mode) vPtr = *(float **)vPtr;
         
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         
         GDBG_INFO_MORE(gc->myLevel, "(%f %f)\n",  
                        FARRAY(vPtr,gc->state.vData.vertexInfo.offset), 
@@ -673,7 +673,7 @@ _grDrawPoints(FxI32 mode, FxI32 count, v
         if (mode)
           vPtr = *(float **)vPtr;
         oow = 1.0f / FARRAY(vPtr, gc->state.vData.wInfo.offset);        
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         
         {        
           float fx, fy;
@@ -807,9 +807,9 @@ _grDrawLineStrip(FxI32 mode, FxI32 ltype
           a = *(float **)a;
           b = *(float **)b;
         }
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         if (ltype == GR_LINES)
-          (float *)pointers += stride;
+          pointers = (float *)pointers + stride;
         
         /*
         ** compute absolute deltas and draw from low Y to high Y
@@ -969,10 +969,10 @@ _grDrawLineStrip(FxI32 mode, FxI32 ltype
             a = *(float **)a;
             b = *(float **)b;
           }
-          (float *)pointers += stride;
+          pointers = (float *)pointers + stride;
           owa = oowa = 1.0f / FARRAY(a, gc->state.vData.wInfo.offset);        
           owb = oowb = 1.0f / FARRAY(b, gc->state.vData.wInfo.offset);        
-          (float *)pointers += stride;
+          pointers = (float *)pointers + stride;
         }
         else {
           owa = oowa = oowb;
@@ -982,7 +982,7 @@ _grDrawLineStrip(FxI32 mode, FxI32 ltype
             a = *(float **)a;
             b = *(float **)b;
           }
-          (float *)pointers += stride;
+          pointers = (float *)pointers + stride;
           owb = oowb = 1.0f / FARRAY(b, gc->state.vData.wInfo.offset);
         }
         fay = tmp1 = FARRAY(a, gc->state.vData.vertexInfo.offset+4)
@@ -1129,7 +1129,7 @@ _grDrawTriangles_Default(FxI32 mode, FxI
         vPtr = pointers;
         if (mode)
           vPtr = *(float **)vPtr;
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         
         i = gc->tsuDataList[dataElem];
         
@@ -1169,7 +1169,7 @@ _grDrawTriangles_Default(FxI32 mode, FxI
                  *oow*gc->state.Viewport.hwidth + gc->state.Viewport.ox);
         TRI_SETF(FARRAY(vPtr, 4)
                  *oow*gc->state.Viewport.hheight + gc->state.Viewport.oy);
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         
         TRI_VP_SETFS(vPtr,oow);
       }
diff -rupN glide3x-ORIG/h5/glide3/src/glfb.c glide3x/h5/glide3/src/glfb.c
--- glide3x-ORIG/h5/glide3/src/glfb.c	2003-09-02 02:33:28 +0000
+++ glide3x/h5/glide3/src/glfb.c	2015-07-28 03:43:28 +0000
@@ -2001,8 +2001,8 @@ _grLfbWriteRegion(FxBool pixPipelineP,
          do {
              MMX_DSTLINE2(srcData, dstData, src_width);
              /* adjust for next line */
-             ((FxU8 *)srcData) += src_stride;
-             ((FxU8 *)dstData) += info.strideInBytes;
+             srcData = ((FxU8 *)srcData) + src_stride;
+             dstData = ((FxU8 *)dstData) + info.strideInBytes;
          } while (--scanline);
          MMX_RESET();
          break;
@@ -2010,8 +2010,8 @@ _grLfbWriteRegion(FxBool pixPipelineP,
          do {
              FPU_DSTLINE2(srcData, dstData, src_width);
              /* adjust for next line */
-             ((FxU8 *)srcData) += src_stride;
-             ((FxU8 *)dstData) += info.strideInBytes;
+             srcData = ((FxU8 *)srcData) + src_stride;
+             dstData = ((FxU8 *)dstData) + info.strideInBytes;
          } while (--scanline);
          break;
 	  }
@@ -2081,8 +2081,8 @@ _grLfbWriteRegion(FxBool pixPipelineP,
          do {
              MMX_DSTLINE4(srcData, dstData, src_width);
              /* adjust for next line */
-             ((FxU8 *)srcData) += src_stride;
-             ((FxU8 *)dstData) += info.strideInBytes;
+             srcData = ((FxU8 *)srcData) + src_stride;
+             dstData = ((FxU8 *)dstData) + info.strideInBytes;
          } while (--scanline);
          MMX_RESET();
          break;
@@ -2090,8 +2090,8 @@ _grLfbWriteRegion(FxBool pixPipelineP,
 		 do {
              FPU_DSTLINE4(srcData, dstData, src_width);
              /* adjust for next line */
-             ((FxU8 *)srcData) += src_stride;
-             ((FxU8 *)dstData) += info.strideInBytes;
+             srcData = ((FxU8 *)srcData) + src_stride;
+             dstData = ((FxU8 *)dstData) + info.strideInBytes;
          } while (--scanline);
          break;
       }
@@ -2312,16 +2312,16 @@ static FxBool grLfbReadRegionOrigin (GrB
          do {
            MMX_SRCLINE(src, dst_data, len);
            /* adjust for next line */
-           ((FxU8 *)src) += info.strideInBytes;
-           ((FxU8 *)dst_data) += dst_stride;
+         src = ((FxU8 *)src) + info.strideInBytes;
+         dst_data = ((FxU8 *)dst_data) + dst_stride;
          } while (--src_height);
          MMX_RESET();
        } else {
          do {
            FPU_SRCLINE(src, dst_data, len);
            /* adjust for next line */
-           ((FxU8 *)src) += info.strideInBytes;
-           ((FxU8 *)dst_data) += dst_stride;
+         src = ((FxU8 *)src) + info.strideInBytes;
+         dst_data = ((FxU8 *)dst_data) + dst_stride;
          } while (--src_height);
        }
        goto okay;
@@ -2388,8 +2388,8 @@ static FxBool grLfbReadRegionOrigin (GrB
          }
          
          /* adjust for next line */
-         ((FxU8 *)src)+=info.strideInBytes;
-         ((FxU8 *)dst_data) += dst_stride;
+         src = ((FxU8 *)src) + info.strideInBytes;
+         dst_data = ((FxU8 *)dst_data) + dst_stride;
        }
      } else if (gc->state.forced32BPP == 15) {
        while(src_height--) {
@@ -2410,8 +2410,8 @@ static FxBool grLfbReadRegionOrigin (GrB
          }
          
          /* adjust for next line */
-         ((FxU8 *)src)+=info.strideInBytes;
-         ((FxU8 *)dst_data) += dst_stride;
+         src = ((FxU8 *)src) + info.strideInBytes;
+         dst_data = ((FxU8 *)dst_data) + dst_stride;
        }
      }
 
diff -rupN glide3x-ORIG/h5/glide3/src/gstrip.c glide3x/h5/glide3/src/gstrip.c
--- glide3x-ORIG/h5/glide3/src/gstrip.c	2003-09-02 02:33:28 +0000
+++ glide3x/h5/glide3/src/gstrip.c	2015-07-28 03:43:28 +0000
@@ -212,7 +212,7 @@ _grDrawVertexList(FxU32 pktype, FxU32 ty
         vPtr = pointers;
         if (mode)
           vPtr = *(float **)vPtr;
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
         
         TRI_SETF(FARRAY(vPtr, 0));
         dataElem = 0;
@@ -252,7 +252,7 @@ _grDrawVertexList(FxU32 pktype, FxU32 ty
                  *oow*gc->state.Viewport.hwidth + gc->state.Viewport.ox);
         TRI_SETF(FARRAY(vPtr, 4)
                  *oow*gc->state.Viewport.hheight + gc->state.Viewport.oy);
-        (float *)pointers += stride;
+        pointers = (float *)pointers + stride;
 
         TRI_VP_SETFS(vPtr, oow);
       }
diff -rupN glide3x-ORIG/h5/glide3/tests/Makefile.DJ glide3x/h5/glide3/tests/Makefile.DJ
--- glide3x-ORIG/h5/glide3/tests/Makefile.DJ	2003-09-02 02:34:20 +0000
+++ glide3x/h5/glide3/tests/Makefile.DJ	2015-07-28 03:28:20 +0000
@@ -31,7 +31,7 @@ TOP = ../../..
 CPU ?= pentium
 
 CC = gcc
-CFLAGS = -Wall -O2 -ffast-math -mcpu=$(CPU)
+CFLAGS = -O2 -ffast-math
 CFLAGS += -I$(TOP)/$(FX_GLIDE_HW)/glide3/src -I$(TOP)/$(FX_GLIDE_HW)/incsrc
 CFLAGS += -I$(TOP)/swlibs/fxmisc
 CFLAGS += -D__DOS__ -DH3
diff -rupN glide3x-ORIG/h5/minihwc/minihwc.c glide3x/h5/minihwc/minihwc.c
--- glide3x-ORIG/h5/minihwc/minihwc.c	2003-09-02 02:35:10 +0000
+++ glide3x/h5/minihwc/minihwc.c	2015-07-28 04:11:28 +0000
@@ -1038,7 +1038,10 @@ modify [eax];
 #elif defined(__POWERPC__) && defined(__MWERKS__)
 #define P6FENCE __sync()
 #elif defined(__DJGPP__) || defined (__MINGW32__)
-#define P6FENCE __asm __volatile ("xchg %%eax, _fenceVar":::"%eax")
+//#define P6FENCE __asm__ __volatile__ ("xchg %%eax, fenceVar":::"%eax")
+
+#define P6FENCE __asm__ __volatile__("xchg %%eax,%0":: "m" (fenceVar): "eax")
+
 #else
 #error "P6 Fencing in-line assembler code needs to be added for this compiler"
 #endif /* Compiler specific fence commands */
diff -rupN glide3x-ORIG/Makefile.DJ glide3x/Makefile.DJ
--- glide3x-ORIG/Makefile.DJ	2003-09-02 02:32:02 +0000
+++ glide3x/Makefile.DJ	2015-07-28 03:24:14 +0000
@@ -111,13 +111,13 @@ ASFLAGS += -I$(FX_GLIDE_HW)/glide3/src
 ASFLAGS += $(CDEFS)
 
 # compiler
-CFLAGS = -Wall -W
+CFLAGS = # -Wall -W
 
 ifdef DEBUG
 CFLAGS += -O0 -gcoff
 else
 CPU ?= pentium
-CFLAGS += -O2 -ffast-math -mcpu=$(CPU)
+CFLAGS += -O2 -ffast-math
 endif
 
 CFLAGS += -I$(FX_GLIDE_HW)/glide3/src -I$(FX_GLIDE_HW)/incsrc -I$(FX_GLIDE_HW)/minihwc -I$(FX_GLIDE_HW)/cinit
