diff -rupN q2dos-ORIG//client/cl_main.c q2dos//client/cl_main.c
--- q2dos-ORIG//client/cl_main.c	2015-08-17 22:23:18 -0400
+++ q2dos//client/cl_main.c	2015-08-17 22:23:56 -0400
@@ -2486,16 +2486,26 @@ void CL_Init (void)
 
 	Con_Init ();
 	VID_Init ();
+
+	printf("VID_Init complete\n");
+
 	S_Init ();	// sound must be initialized after window is created
 
+	printf("Sound_Init complete\n");
+
 	V_Init ();
 
+	printf("V_Init complete\n");
+
 	net_message.data = net_message_buffer;
 	net_message.maxsize = sizeof(net_message_buffer);
 
 	M_Init ();
 	
 	SCR_Init ();
+
+	printf("SCR_Init complete\n");
+
 	cls.disable_screen = true;	// don't draw yet
 
 	CDAudio_Init ();
diff -rupN q2dos-ORIG//dos/dxe.c q2dos//dos/dxe.c
--- q2dos-ORIG//dos/dxe.c	2015-08-17 22:23:24 -0400
+++ q2dos//dos/dxe.c	2015-08-17 22:24:02 -0400
@@ -186,10 +186,10 @@ void *Sys_dlopen (const char *filename,
 {
 	void *lib;
 
-	_dlsymresolver = dxe_res;
+	dlsymresolver = dxe_res;
 	num_unres = 0;
 	lib = dlopen (filename, (globalmode)? RTLD_GLOBAL : 0);
-	_dlsymresolver = NULL;
+	dlsymresolver = NULL;
 	if (num_unres)
 		Sys_Error ("Unresolved symbol(s) in %s. See DXE.LOG for details.", filename);
 
diff -rupN q2dos-ORIG//dos/sys_dos.c q2dos//dos/sys_dos.c
--- q2dos-ORIG//dos/sys_dos.c	2015-08-17 22:23:24 -0400
+++ q2dos//dos/sys_dos.c	2015-08-17 22:24:02 -0400
@@ -42,6 +42,8 @@ Foundation, Inc., 59 Temple Place - Suit
 
 int _crt0_startup_flags = _CRT0_FLAG_UNIX_SBRK; /* FS: Fake Mem Fix for Win9x (QIP) */
 
+unsigned _stklen = 1048576;
+
 #include "dosisms.h"
 #include "../qcommon/qcommon.h"
 #include "../client/keys.h"
diff -rupN q2dos-ORIG//dos/vid_dos.c q2dos//dos/vid_dos.c
--- q2dos-ORIG//dos/vid_dos.c	2015-08-17 22:23:24 -0400
+++ q2dos//dos/vid_dos.c	2015-08-17 22:24:02 -0400
@@ -25,8 +25,7 @@ Foundation, Inc., 59 Temple Place - Suit
 #include "vid_dos.h"
 
 #define NUM_VID_DRIVERS 2	/* only ref_soft for now */
-#define REF_SOFT	0
-#define REF_SQB		1 /* FS: Qbism's coloured dlight renderer */
+// #define REF_SOFT	0
 
 cvar_t *vid_ref;
 static cvar_t *vid_fullscreen;
@@ -52,7 +51,6 @@ static menuframework_s  s_software_menu;
 static menuframework_s *s_current_menu;
 static int		s_current_menu_index;
 
-static menulist_s		s_ref_list[NUM_VID_DRIVERS];
 static menulist_s		s_mode_list[NUM_VID_DRIVERS];
 static menuslider_s		s_screensize_slider[NUM_VID_DRIVERS];
 static menuslider_s		s_brightness_slider[NUM_VID_DRIVERS];
@@ -138,23 +136,6 @@ static qboolean VID_GetModeInfo(int *wid
 	return true;
 }
 
-static void RefreshCallback( void *unused )
-{
-	s_ref_list[!s_current_menu_index].curvalue = s_ref_list[s_current_menu_index].curvalue;
-
-//	if ( s_ref_list[s_current_menu_index].curvalue == SOFTWARE_MENU )
-	{
-		s_current_menu = &s_software_menu;
-		s_current_menu_index = 0;
-	}
-/*	else
-	{
-		s_current_menu = &s_opengl_menu;
-		s_current_menu_index = 1;
-	}
-*/
-}
-
 static void ScreenSizeCallback(void *s)
 {
 	menuslider_s *slider = (menuslider_s *) s;
@@ -165,7 +146,7 @@ static void BrightnessCallback(void *s)
 {
 	menuslider_s *slider = (menuslider_s *) s;
 
-	if ((stricmp(vid_ref->string,"soft") == 0) || (stricmp(vid_ref->string, "sqb") == 0))
+	if (stricmp(vid_ref->string,"soft") == 0)
 	{
 		float gamma = (0.8 - (slider->curvalue/10.0 - 0.5)) + 0.5;
 		Cvar_SetValue( "vid_gamma", gamma );
@@ -197,15 +178,8 @@ static void ApplyChanges(void *unused)
 	Cvar_SetValue("r_contentblend", s_contentblend_box.curvalue);	/* FS */
 	Cvar_SetValue("sw_waterwarp", s_waterwarp_box.curvalue);	/* FS */
 
-	switch ( s_ref_list[s_current_menu_index].curvalue )
-	{
-	case REF_SOFT:
-		Cvar_Set( "vid_ref", "soft" );
-		break;
-	case REF_SQB:
-		Cvar_Set( "vid_ref", "sqb" );
-		break;
-	}
+	/** only ref_soft for now!! **/
+	Cvar_Set("vid_ref", "gl");
 
 	M_ForceMenuOff();
 }
@@ -285,52 +259,52 @@ static qboolean VID_LoadRefresh (const c
 		Com_Error (ERR_FATAL, "%s has incompatible api_version", name);
 	}
 
-	/* HACK HACK HACK: retrieving the video modes list into here
-	 * using the hInstance and wndProc parameters of re.Init(). */
 	if (re.Init (&vid_nummodes, &vid_modes) == -1)
 	{
-		re.Shutdown();
+		/* re.Shutdown();
 		VID_FreeReflib ();
-		return false;
+		return false; */
+		printf("re.Init failed in LoadRefresh\n");
+
 	}
 
 	reflib_active = true;
 
 	vidref_val = VIDREF_OTHER;
-	if(vid_ref)
+/*	if(vid_ref)
 	{
-		if(!strcmp(vid_ref->string, "soft") || !strcmp(vid_ref->string, "sqb"))
+		if(!strcmp(vid_ref->string, "soft"))
 			vidref_val = VIDREF_SOFT;
-	}
+	}	*/
 
 	for (i = 0; i < MAX_VIDEOMODES; ++i)
 	{
 		resolution_names[i] = (i < vid_nummodes)?
 					vid_modes[i].menuname : NULL;
 	}
-	resolution_names[MAX_VIDEOMODES] = NULL;
+	// resolution_names[MAX_VIDEOMODES] = NULL;
 
 	return true;
 }
 
 void	VID_Init (void)
 {
-	viddef.width = 320;
-	viddef.height = 240;
+	viddef.width = 512;
+	viddef.height = 284;
 
-	vid_ref = Cvar_Get ("vid_ref", "soft", CVAR_ARCHIVE);
-	vid_ref->description = "Video renderer to use.  Locked to software in Q2DOS.";
+	vid_ref = Cvar_Get ("vid_ref", "gl", CVAR_ARCHIVE);
+	vid_ref->description = "Video renderer to use.  Locked to gl in Q2DOS.";
 	vid_fullscreen = Cvar_Get ("vid_fullscreen", "1", CVAR_ARCHIVE);
-	vid_fullscreen->description = "Enable fullscreen video.  Locked to fullscreen in Q2DOS.";
+	vid_fullscreen->description = "Enable fullscreen video.  Locked to fullscreen in Q2DOS.";
 	vid_gamma = Cvar_Get("vid_gamma", "1", CVAR_ARCHIVE);
 
 	vid_vgaonly = Cvar_Get("vid_vgaonly", (COM_CheckParm("-vgaonly"))? "1" : "0", 0);
 	vid_bankedvga = Cvar_Get("vid_bankedvga", (COM_CheckParm("-bankedvga"))? "1" : "0", 0);
 
-	VID_CheckChanges ();
+	// VID_CheckChanges ();
 
 	Cmd_AddCommand("vid_restart", VID_Restart_f);
-	Cmd_AddCommand("vid_listmodes", VID_ListModes_f); /* FS: Added */
+	// Cmd_AddCommand("vid_listmodes", VID_ListModes_f); /* FS: Added */
 }
 
 void	VID_Shutdown (void)
@@ -364,9 +338,11 @@ void	VID_CheckChanges (void)
 		Com_sprintf(name, sizeof(name), "ref_%s.dxe", vid_ref->string);
 		if (!VID_LoadRefresh(name))
 		{
-			if (strcmp (vid_ref->string, "soft") == 0)
+			printf("LoadRefresh failed\n");
+			
+			/* if (strcmp (vid_ref->string, "soft") == 0)
 				Com_Error (ERR_FATAL, "Couldn't fall back to software refresh!");
-			Cvar_Set("vid_ref", "soft");
+			Cvar_Set("vid_ref", "soft"); */
 
 			/*
 			** drop the console if we fail to load a refresh
@@ -388,14 +364,6 @@ void	VID_MenuInit (void)
 		NULL
 	};
 
-	static const char *refs[] =
-	{
-		"[software      ]",
-		"[software qbism]",
-//		"[3Dfx OpenGL   ]",
-		0
-	};
-
 	int i;
 
 	if (!sw_mode)
@@ -417,31 +385,13 @@ void	VID_MenuInit (void)
 
 	s_screensize_slider[SOFTWARE_MENU].curvalue = scr_viewsize->value/10;
 
-	if ( strcmp( Cvar_VariableString("vid_ref"), "soft" ) == 0 )
-	{
-		s_current_menu_index = SOFTWARE_MENU;
-		s_ref_list[0].curvalue = s_ref_list[1].curvalue = REF_SOFT;
-	}
-
-	if ( strcmp( Cvar_VariableString("vid_ref"), "sqb" ) == 0 )
-	{
-		s_current_menu_index = SOFTWARE_MENU;
-		s_ref_list[0].curvalue = s_ref_list[1].curvalue = REF_SQB;
-	}
+	s_current_menu_index = SOFTWARE_MENU;
 
 	s_software_menu.x = viddef.width * 0.50;
 	s_software_menu.nitems = 0;
 
 	for (i = 0; i < NUM_VID_DRIVERS; i++)
 	{
-		s_ref_list[i].generic.type		= MTYPE_SPINCONTROL;
-		s_ref_list[i].generic.name		= "graphics renderer";
-		s_ref_list[i].generic.x			= 0;
-		s_ref_list[i].generic.y			= 0;
-		s_ref_list[i].generic.callback	= RefreshCallback;
-		s_ref_list[i].itemnames			= refs;
-		s_ref_list[i].generic.statusbar	= "changes video refresh";
-
 		s_mode_list[i].generic.type = MTYPE_SPINCONTROL;
 		s_mode_list[i].generic.name = "video resolution";
 		s_mode_list[i].generic.x = 0;
@@ -503,7 +453,6 @@ void	VID_MenuInit (void)
 	s_waterwarp_box.itemnames = yesno_names;
 
 	/* FS: ATTN  AddItem order has to be the order you want to see it in or else the cursor gets wonky! */
-	Menu_AddItem(&s_software_menu, (void *) &s_ref_list[SOFTWARE_MENU]);
 	Menu_AddItem(&s_software_menu, (void *) &s_mode_list[SOFTWARE_MENU]);
 	Menu_AddItem(&s_software_menu, (void *) &s_screensize_slider[SOFTWARE_MENU]);
 	Menu_AddItem(&s_software_menu, (void *) &s_brightness_slider[SOFTWARE_MENU]);
diff -rupN q2dos-ORIG//game/makedxe3 q2dos//game/makedxe3
--- q2dos-ORIG//game/makedxe3	2015-08-17 22:23:24 -0400
+++ q2dos//game/makedxe3	2015-08-17 22:24:02 -0400
@@ -1,6 +1,6 @@
 CC = gcc
-CFLAGS = -Wall -O2 -fno-strict-aliasing -fomit-frame-pointer
-CPPFLAGS = -Did386=1
+CFLAGS = -fno-strict-aliasing -fomit-frame-pointer
+CPPFLAGS = -Did386=0
 DXE3GEN = dxe3gen
 
 GAME = m_tank.o \
diff -rupN q2dos-ORIG//game/q_shared.c q2dos//game/q_shared.c
--- q2dos-ORIG//game/q_shared.c	2015-08-17 22:23:25 -0400
+++ q2dos//game/q_shared.c	2015-08-17 22:24:03 -0400
@@ -303,7 +303,7 @@ float	anglemod(float a)
 
 
 // this is the slow, general version
-int BoxOnPlaneSide2 (vec3_t emins, vec3_t emaxs, struct cplane_s *p)
+int BoxOnPlaneSide (vec3_t emins, vec3_t emaxs, struct cplane_s *p)
 {
 	int		i;
 	float	dist1, dist2;
@@ -354,7 +354,7 @@ Returns 1, 2, or 1 + 2
 ==================
 */
 #if !id386
-int BoxOnPlaneSide (vec3_t emins, vec3_t emaxs, struct cplane_s *p)
+int BoxOnPlaneSide2 (vec3_t emins, vec3_t emaxs, struct cplane_s *p)
 {
 	float	dist1, dist2;
 	int		sides;
@@ -423,7 +423,7 @@ dist2 = p->normal[0]*emaxs[0] + p->norma
 }
 #endif
 
-#if (id386) && defined(_MSC_VER)
+#if 0
 #pragma warning( disable: 4035 )
 
 __declspec( naked ) int BoxOnPlaneSide (vec3_t emins, vec3_t emaxs, struct cplane_s *p)
diff -rupN q2dos-ORIG//makedxe3.frank q2dos//makedxe3.frank
--- q2dos-ORIG//makedxe3.frank	2015-08-17 22:23:29 -0400
+++ q2dos//makedxe3.frank	2015-08-17 22:24:07 -0400
@@ -1,27 +1,27 @@
 # features selection :
 #
 # gamespy/server browser:
-USE_GAMESPY=1
+USE_GAMESPY=0
 # dynamically linked gamespy:
 GAMESPY_DXE=1
 # libcurl/http downloads:
-USE_CURL=1
+USE_CURL=0
 # ogg/vorbis music:
-USE_OGG=1
+USE_OGG=0
 # use tremor library for ogg/vorbis:
-USE_TREMOR=1
+USE_TREMOR=0
 # pci sound card support:
-USE_SNDPCI=1
+USE_SNDPCI=0
 # cd audio support:
 USE_CDAUDIO=1
 # abrash's asm optimizations:
 USE_ASM=1
 # dynamic refresh (video) modules:
-REF_DXE=1
+REF_DXE=0
 
 CC = gcc
-CFLAGS = -g -Wall -Werror -O2 -fno-strict-aliasing -fomit-frame-pointer
-CPPFLAGS = -DCLIENT_SPLIT_NETFRAME
+CFLAGS = -O2 -fno-strict-aliasing -fomit-frame-pointer
+CPPFLAGS = -Iref_gl/include -Iref_gl/include/glide3 -DCLIENT_SPLIT_NETFRAME
 LDFLAGS =
 
 ifneq ($(REF_DXE),1)
@@ -139,44 +139,23 @@ SERVER = server/sv_ccmds.o \
 	server/sv_world.o
 
 ifneq ($(REF_DXE),1)
-REFSOFT = ref_soft/r_alias.o \
-	ref_soft/r_main.o \
-	ref_soft/r_light.o \
-	ref_soft/r_misc.o \
-	ref_soft/r_model.o \
-	ref_soft/r_part.o \
-	ref_soft/r_poly.o \
-	ref_soft/r_polyse.o \
-	ref_soft/r_rast.o \
-	ref_soft/r_scan.o \
-	ref_soft/r_sprite.o \
-	ref_soft/r_surf.o \
-	ref_soft/r_aclip.o \
-	ref_soft/r_bsp.o \
-	ref_soft/r_draw.o \
-	ref_soft/r_edge.o \
-	ref_soft/r_image.o \
-	dos/vid_ext.o \
-	dos/vregset.o \
-	dos/swimp_dos.o
+REFSOFT = ref_gl/gl_draw.o \
+	ref_gl/gl_image.o \
+	ref_gl/gl_light.o \
+	ref_gl/gl_mesh.o \
+	ref_gl/gl_model.o \
+	ref_gl/gl_rmain.o \
+	ref_gl/gl_rmisc.o \
+	ref_gl/gl_rsurf.o \
+	ref_gl/gl_warp.o \
+	ref_gl/qgl_linux.o \
+	ref_gl/gl_fxmesa.o
 endif
 
 ifeq ($(USE_ASM),1)
-COMMONASM = gas/math.o
 CLIENTASM = gas/snd_mixa.o
 ifneq ($(REF_DXE),1)
-REFASM = gas/math_ref.o \
-	gas/d_copy.o \
-	gas/d_polysa.o \
-	gas/r_aclipa.o \
-	gas/r_draw16.o \
-	gas/r_drawa.o \
-	gas/r_edgea.o \
-	gas/r_scana.o \
-	gas/r_spr8.o \
-	gas/r_surf8.o \
-	gas/r_varsa.o \
-	gas/sys_dosa.o
+REFASM = gas/sys_dosa.o
 endif
 endif
 
@@ -188,13 +167,13 @@ OBJECTS = $(CLIENT) $(CLIENTASM) $(QCOMM
 all: q2.exe
 
 q2.exe: $(OBJECTS)
-	$(CC) $(OBJECTS) $(LDFLAGS) $(VORBIS_LIBS) $(CURL_LIBS) $(WATT32_LIBS) -lm -o $@
+	$(CC) $(OBJECTS) $(LDFLAGS) $(VORBIS_LIBS) $(CURL_LIBS) $(WATT32_LIBS) -Lref_gl/lib -lgl -lglu -lglid3 -lm -o $@
 
 clean:
 	rm -f qcommon/*.o
 	rm -f client/*.o
 	rm -f server/*.o
-	rm -f ref_soft/*.o
+	rm -f ref_gl/*.o
 	rm -f dos/*.o
 	rm -f gas/*.o
 	rm -f Goa/*.o

